// Generated by CoffeeScript 1.4.0

(function($) {
  $.Spellchecker = function(el, options) {
    var _suggestion,
      _this = this;
    this.el = el;
    this.$el = $(el);
    this.name = "";
    this.isSuggestionShown = false;
    this.options = options;
    this.isSuggestedValue = false;
    this.isNameMatch = false;
    this.nameMatchConfidence = 0;
    this.debug = false;
    this.$el.data("Spellchecker", this);
    this.init = function() {
      _this.config = $.extend({}, $.Spellchecker.defaultOptions, options);
      _this._bindEvents();
      _this._kbdBindEvents();
      if (_this.config.name_type === "first_name") {
        _this._onExtraBindEvents();
      }
      return _this;
    };
    /*
    */

    _suggestion = function(name) {
      var age, dictionary_id, finalUrl;
      age = _this.age || _this.config.age;
      _this.name = name;
      _this.year = _this.config.decade - age;
      _this.data = "";
      dictionary_id = _this.config.name_type === "first_name" ? "yob" + _this["year"] : "surnames";
      finalUrl = _this.config.url + _this.name + "?dictionary_id=" + dictionary_id + "&max=" + _this.config.maxlength + "&api_key=" + _this.config.api_key;
      _this.nameMatchConfidence = 0;
      return $.ajax({
        url: finalUrl,
        context: document.body,
        async: true,
        success: function(response) {
          if (this.debug) {
            console.log("success1");
          }
          this.data = JSON.parse(response);
          return this._appendList(name);
        }
      });
    };
    return this.init();
  };
  $.pluginName.defaultOptions = {
    optionOne: 'value',
    optionTwo: 'value'
  };
  return $.fn.pluginName = function(options) {
    return $.each(this, function(i, el) {
      var $el;
      $el = $(el);
      if (!$el.data('pluginName')) {
        return $el.data('pluginName', new $.pluginName(el, options));
      }
    });
  };
})(jQuery);
